
"""Initial migration with core tables

Revision ID: a1b2c3d4e5f6
Revises:
Create Date: 2024-08-01 14:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a1b2c3d4e5f6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE SCHEMA IF NOT EXISTS app_data")
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='app_data'
    )
    op.create_index(op.f('ix_app_data_users_email'), 'users', ['email'], unique=True, schema='app_data')
    op.create_table('ai_conversations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('history', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['app_data.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='app_data'
    )
    op.create_index(op.f('ix_app_data_ai_conversations_user_id'), 'ai_conversations', ['user_id'], unique=False, schema='app_data')
    op.create_table('portfolios',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['app_data.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='app_data'
    )
    op.create_table('transactions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('portfolio_id', sa.UUID(), nullable=False),
    sa.Column('instrument_ticker', sa.String(length=20), nullable=False),
    sa.Column('transaction_type', sa.String(length=4), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=19, scale=8), nullable=False),
    sa.Column('price', sa.Numeric(precision=19, scale=8), nullable=False),
    sa.Column('transaction_date', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['portfolio_id'], ['app_data.portfolios.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='app_data'
    )
    op.create_index(op.f('ix_app_data_transactions_instrument_ticker'), 'transactions', ['instrument_ticker'], unique=False, schema='app_data')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_app_data_transactions_instrument_ticker'), table_name='transactions', schema='app_data')
    op.drop_table('transactions', schema='app_data')
    op.drop_table('portfolios', schema='app_data')
    op.drop_index(op.f('ix_app_data_ai_conversations_user_id'), table_name='ai_conversations', schema='app_data')
    op.drop_table('ai_conversations', schema='app_data')
    op.drop_index(op.f('ix_app_data_users_email'), table_name='users', schema='app_data')
    op.drop_table('users', schema='app_data')
    op.execute("DROP SCHEMA IF EXISTS app_data")
    # ### end Alembic commands ###